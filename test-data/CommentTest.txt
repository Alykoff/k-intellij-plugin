/ beginning of line
------------>
PsiComment(KTokenType.comment)('/ beginning of line')
============|


1 / end of line
1
------------>
Element(FILE)
  PsiElement(KTokenType.number)('1')
  PsiComment(KTokenType.comment)(' / end of line')
  PsiElement(KTokenType.newline)('\n')
  PsiElement(KTokenType.number)('1')
============|


` / after symbol
1
------------>
Element(FILE)
  PsiElement(KTokenType.symbol)('`')
  PsiComment(KTokenType.comment)(' / after symbol')
  PsiElement(KTokenType.newline)('\n')
  PsiElement(KTokenType.number)('1')
============|


` ` ` ` / after symbol vector
1
------------>
Element(FILE)
  PsiElement(KTokenType.symbol_vector)('` ` ` `')
  PsiComment(KTokenType.comment)(' / after symbol vector')
  PsiElement(KTokenType.newline)('\n')
  PsiElement(KTokenType.number)('1')
============|


- / after verb
1
------------>
Element(FILE)
  PsiElement(KTokenType.verb)('-')
  PsiComment(KTokenType.comment)(' / after verb')
  PsiElement(KTokenType.newline)('\n')
  PsiElement(KTokenType.number)('1')
============|


*: / after composed monad
1
------------>
Element(FILE)
  PsiElement(KTokenType.composed_monad)('*:')
  PsiComment(KTokenType.comment)(' / after composed monad')
  PsiElement(KTokenType.newline)('\n')
  PsiElement(KTokenType.number)('1')
============|


+/ / after derived verb
1
------------>
Element(FILE)
  PsiElement(KTokenType.derived_verb)('+/')
  PsiComment(KTokenType.comment)(' / after derived verb')
  PsiElement(KTokenType.newline)('\n')
  PsiElement(KTokenType.number)('1')
============|


: / after colon
1
------------>
Element(FILE)
  PsiElement(KTokenType.:)(':')
  PsiComment(KTokenType.comment)(' / after colon')
  PsiElement(KTokenType.newline)('\n')
  PsiElement(KTokenType.number)('1')
============|


:: / after double colon
1
------------>
Element(FILE)
  PsiElement(KTokenType.:)(':')
  PsiElement(KTokenType.:)(':')
  PsiComment(KTokenType.comment)(' / after double colon')
  PsiElement(KTokenType.newline)('\n')
  PsiElement(KTokenType.number)('1')
